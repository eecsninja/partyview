apply plugin: 'android'

android {
    compileSdkVersion 19
    buildToolsVersion "19.1.0"

    defaultConfig {
        applicationId "com.sms.partyview"
        minSdkVersion 14
        targetSdkVersion 19
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    maven { url 'http://clinker.47deg.com/nexus/content/groups/public' }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile files('libs/Parse-1.5.1.jar')
    compile files('libs/Pubnub-Android-3.6.2.jar')
    compile files('libs/bcprov-jdk15on-1.47.jar')
    compile project(':ParseLoginUI')

    // support library
    compile "com.android.support:support-v4:19.1.0"

    // An interactive indicator to navigate between the different pages of a ViewPager
    compile 'com.astuetz:pagerslidingtabstrip:1.0.1'

    // google play services
    compile 'com.google.android.gms:play-services:5.0.77'

    // date picker
    compile("com.doomonafireball.betterpickers:library:1.5.2")
    {
        exclude group: 'com.android.support', module: 'support-v4'
    }

    compile 'joda-time:joda-time:2.3'

    compile 'eu.inmite.android.lib:android-styled-dialogs:1.1.2@aar'

    compile 'org.ocpsoft.prettytime:prettytime:3.2.5.Final'

    compile ('com.fortysevendeg.swipelistview:swipelistview:1.0-SNAPSHOT@aar') {
        transitive = true
    }
}

// Credit: https://gist.github.com/dmarcato/d7c91b94214acd936e42
afterEvaluate { project ->
    android.applicationVariants.each { variant ->
        variant.javaCompile.dependsOn stripPlayServices
    }
}

task stripPlayServices << {
    def playServiceRootFolder = new File(rootProject.buildDir, "intermediates/exploded-aar/com.google.android.gms/play-services/")
    playServiceRootFolder.list().each { versionName ->
        def versionFolder = new File(playServiceRootFolder, versionName)
        copy {
            from (file(new File(versionFolder, "classes.jar")))
            into (file(versionFolder))
            rename { fileName ->
                fileName = "classes_orig.jar"
            }
        }
        tasks.create(name: "strip" + versionName, type: Jar) {
            destinationDir = versionFolder
            archiveName = "classes.jar"
            from (zipTree(new File(versionFolder, "classes_orig.jar"))) {
                exclude "com/google/ads/**"
                exclude "com/google/android/gms/analytics/**"
                exclude "com/google/android/gms/games/**"
                exclude "com/google/android/gms/plus/**"
                exclude "com/google/android/gms/drive/**"
                exclude "com/google/android/gms/ads/**"
                exclude "com/google/android/gms/wallet/**"
                exclude "com/google/android/gms/wearable/**"
                exclude "com/google/android/gms/panorama/**"
            }
        }.execute()
        delete {
            delete (file(new File(versionFolder, "classes_orig.jar")))
        }
    }
}